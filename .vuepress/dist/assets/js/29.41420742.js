(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{427:function(t,a,n){"use strict";n.r(a);var e=n(2),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("第一章 面试题基础篇")]),t._v(" "),a("p",[t._v("​\t\t1.1 HTML面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：行内元素有哪些？块级元素有哪些？ 空(void)元素有哪些？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("行内元素：span、img、input...\n块级元素：div、footer、header、section、p、h1...h6...\n空元素：br、hr...\n\n\n元素之间的转换问题：\ndisplay: inline;  \t\t\t把某元素转换成了行内元素      ===>不独占一行的，并且不能设置宽高\ndisplay: inline-block; \t把某元素转换成了行内块元素\t\t ===>不独占一行的，可以设置宽高\ndisplay: block;\t\t\t\t\t把某元素转换成了块元素\t\t\t   ===>独占一行，并且可以设置宽高\n")])])]),a("p",[t._v("​\t\t\t\t面试题：页面导入样式时，使用link和@import有什么区别？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("区别一：link先有，后有@import（兼容性link比@import兼容）；\n区别二：加载顺序差别，浏览器先加载的标签link，后加载@import\n")])])]),a("p",[t._v("​\t\t\t\t面试题：title与h1的区别、b与strong的区别、i与em的区别？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("title与h1的区别：\n\n定义：\n\ttitle：概括了网站信息，可以告诉搜索引擎或者用户关于这个网站的内容主题是什么\n\th1：文章主题内容，告诉蜘蛛我们的网站内容最主要是什么\n区别：\n\ttitle他是显示在网页标题上、h1是显示在网页内容上\n\ttitle比h1添加的重要 (title > h1 ) ==》对于seo的了解\n场景：\n\t网站的logo都是用h1标签包裹的\t\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("b与strong的区别：\n\n定义：\n\tb：实体标签，用来给文字加粗的。\n\tstrong：逻辑标签，用来加强字符语气的。\n区别：\n\tb标签只有加粗的样式，没有实际含义。\n\tstrong表示标签内字符比较重要，用以强调的。\n题外话：为了符合css3的规范，b尽量少用该用strong就行了。\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("i与em的区别：\n\n定义：\n\ti:实体标签，用来做文字倾斜的。\n\tem：是逻辑标签，用来强调文字内容的\n区别：\n\ti只是一个倾斜标签，没有实际含义。\n\tem表示标签内字符重要，用以强调的。\n场景：\n\ti更多的用在字体图标，em术语上（医药，生物）。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：img标签的title和alt有什么区别？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("区别一：\n\ttitle ： 鼠标移入到图片显示的值\n\talt   ： 图片无法加载时显示的值\n区别二：\n\t在seo的层面上，蜘蛛抓取不到图片的内容，所以前端在写img标签的时候为了增加seo效果要加入alt属性来描述这张图是什么内容或者关键词。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：png、jpg、gif 这些图片格式解释一下，分别什么时候用？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("png:无损压缩，尺寸体积要比jpg/jpeg的大，适合做小图标。\njpg:采用压缩算法，有一点失真，比png体积要小，适合做中大图片。\ngif:一般是做动图的。\nwebp：同时支持有损或者无损压缩，相同质量的图片，webp具有更小的体积。兼容性不是特别好。\n")])])]),a("p",[t._v("​\t\t1.2 CSS面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：介绍一下CSS的盒子模型")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CSS的盒子模型有哪些：标准盒子模型、IE盒子模型\nCSS的盒子模型区别：\n\t标准盒子模型：margin、border、padding、content\n\tIE盒子模型 ：margin、content（ border +  padding  + content ）\n通过CSS如何转换盒子模型：\n\tbox-sizing: content-box;\t/*标准盒子模型*/\n\tbox-sizing: border-box;\t  /*IE盒子模型*/\n")])])]),a("p",[t._v("​\t\t\t\t面试题：line-height和heigh区别【大厂】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("line-height是每一行文字的高，如果文字换行则整个盒子高度会增大（行数*行高）。\nheight是一个死值，就是这个盒子的高度。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：CSS选择符有哪些？哪些属性可以继承？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CSS选择符：\n    通配（*）\n    id选择器（#）\n    类选择器（.）\n    标签选择器（div、p、h1...）\n    相邻选择器(+)\n    后代选择器(ul li)\n    子元素选择器（ > ）\n    属性选择器(a[href])\n    \nCSS属性哪些可以继承：\n\t\t文字系列：font-size、color、line-height、text-align...\n***不可继承属性：border、padding、margin...\n")])])]),a("p",[t._v("​\t\t\t\t面试题：CSS优先级算法如何计算？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("优先级比较：!important > 内联样式 > id > class > 标签 > 通配\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CSS权重计算：\n第一：内联样式（style）  权重值:1000\n第二：id选择器  \t\t\t\t 权重值:100\n第三：类选择器 \t\t\t\t  权重值:10\n第四：标签&伪元素选择器   权重值:1\n第五：通配、>、+         权重值:0\n")])])]),a("p",[t._v("​\t\t\t\t面试题：用CSS画一个三角形")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("用边框画（border）,例如：\n{\n\t\twidth: 0;\n\t\theight: 0;\n\n\t\tborder-left:100px solid transparent;\n\t\tborder-right:100px solid transparent;\n\t\tborder-top:100px solid transparent;\n\t\tborder-bottom:100px solid #ccc;\n}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：一个盒子不给宽度和高度如何水平垂直居中？")]),t._v(" "),a("h5",{attrs:{id:"方式一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式一"}},[t._v("#")]),t._v(" 方式一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<div class='container'>\n\t<div class='main'>main</div>\n</div>\n\n.container{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 300px;\n\t\theight: 300px;\n\t\tborder:5px solid #ccc;\n}\n.main{\n\t\tbackground: red;\n}\n")])])]),a("h5",{attrs:{id:"方式二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式二"}},[t._v("#")]),t._v(" 方式二：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<div class='container'>\n\t<div class='main'>main</div>\n</div>\n\n.container{\n\t\tposition: relative;\n\t\twidth: 300px;\n\t\theight: 300px;\n\t\tborder:5px solid #ccc;\n}\n.main{\n\t\tposition: absolute;\n\t\tleft:50%;\n\t\ttop:50%;\n\t\tbackground: red;\n\t\ttransform: translate(-50%,-50%);\n}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：display有哪些值？说明他们的作用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("none     \t\t\t隐藏元素\nblock    \t\t\t把某某元素转换成块元素\ninline   \t\t\t把某某元素转换成内联元素\ninline-block \t把某某元素转换成行内块元素\n")])])]),a("p",[t._v("​\t\t\t\t面试题：对BFC规范(块级格式化上下文：block formatting context)的理解？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("BFC就是页面上一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。\n\n1. 了解BFC ： 块级格式化上下文。\n2. BFC的原则：如果一个元素具有BFC，那么内部元素再怎么弄，都不会影响到外面的元素。\n3. 如何触发BFC：\n\t\tfloat的值非none\n\t\toverflow的值非visible\n\t\tdisplay的值为：inline-block、table-cell...\n\t\tposition的值为:absolute、fixed\n")])])]),a("p",[t._v("​\t\t\t\t面试题：清除浮动有哪些方式？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 触发BFC\n2. 多创建一个盒子，添加样式：clear: both;\n3. after方式\n\tul:after{\n\t\t\tcontent: '';\n\t\t\tdisplay: block;\n\t\t\tclear: both;\n\t}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：在网页中的应该使用奇数还是偶数的字体？为什么呢？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("偶数 : 让文字在浏览器上表现更好看。\n\n另外说明：ui给前端一般设计图都是偶数的，这样不管是布局也好，转换px也好，方便一点。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：position有哪些值？分别是根据什么定位的？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("static [默认]  没有定位\nfixed  固定定位，相对于浏览器窗口进行定位。\nrelative  相对于自身定位，不脱离文档流。\nabsolute\t相对于第一个有relative的父元素，脱离文档流。\n\n\nrelative和absolute区别\n1. relative不脱离文档流 、absolute脱离文档流\n2. relative相对于自身 、 absolute相对于第一个有relative的父元素\n3. relative如果有left、right、top、bottom ==》left、top\n\t absolute如果有left、right、top、bottom ==》left、right、top、bottom\n")])])]),a("p",[t._v("​\t\t\t\t面试题：写一个左中右布局占满屏幕，其中左、右俩块固定宽200，中间自适应宽，要求先加载中间块，请写出结构及样式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("双飞翼\n")])])]),a("p",[t._v("​\t\t\t\t面试题：什么是CSS reset？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("reset.css   \t\t是一个css文件，用来重置css样式的。\nnormalize.css \t为了增强跨浏览器渲染的一致性，一个CSS 重置样式库。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：css sprite是什么,有什么优缺点")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 是什么\n\t把多个小图标合并成一张大图片。\n2. 优缺点\n\t优点：减少了http请求的次数，提升了性能。\n\t缺点：维护比较差（例如图片位置进行修改或者内容宽高修改）\n")])])]),a("p",[t._v("​\t\t\t\t面试题：display: none;与visibility: hidden;的区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 占用位置的区别\ndisplay: none; \t\t\t\t是不占用位置的\nvisibility: hidden;   虽然隐藏了，但是占用位置\n\n2. 重绘和回流的问题\n\nvisibility: hidden; 、 display: none;  产生重绘\ndisplay: none;     还会产生一次回流\n\n产生回流一定会造成重绘，但是重绘不一定会造成回流。\n\n产生回流的情况：改变元素的位置(left、top...)、显示隐藏元素....\n产生重绘的情况：样式改变、换皮肤\n")])])]),a("p",[t._v("​\t\t\t\t面试题：opacity 和 rgba区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("共同性：实现透明效果\n\n1. opacity 取值范围0到1之间，0表示完全透明，1表示不透明\n2. rgba   R表示红色，G表示绿色，B表示蓝色，取值可以在正整数或者百分数。A表示透明度取值0到1之间\n\n区别：继承的区别\nopacity会继承父元素的opacity属性，而RGBA设置的元素的后代元素不会继承不透明属性。\n")])])]),a("p",[t._v("​\t\t1.3 JavaScript基础面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：延迟加载JS有哪些方式？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("延迟加载：async、defer\n\t\t例如：<script defer type=\"text/javascript\" src='script.js'><\/script>\n\t\t\ndefer : 等html全部解析完成，才会执行js代码，顺次执行js脚本。\nasync : async是和html解析同步的（一起的），不是顺次执行js脚本（谁先加载完谁先执行）。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS数据类型有哪些？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("基本类型：string、number、boolean、undefined、null、symbol、bigint\n引用类型：object\n\nNaN是一个数值类型，但是不是一个具体的数字。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS数据类型考题")]),t._v(" "),a("h5",{attrs:{id:"考题一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题一"}},[t._v("#")]),t._v(" 考题一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("console.log( true + 1 );     \t\t\t//2\nconsole.log( 'name'+true );  \t\t\t//nametrue\nconsole.log( undefined + 1 ); \t\t//NaN\nconsole.log( typeof undefined ); //undefined\n")])])]),a("h5",{attrs:{id:"考题二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题二"}},[t._v("#")]),t._v(" 考题二：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("console.log( typeof(NaN) );       //number\nconsole.log( typeof(null) );      //object\n")])])]),a("p",[t._v("​\t\t\t\t面试题：null和undefined的区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1. 作者在设计js的都是先设计的null（为什么设计了null：最初设计js的时候借鉴了java的语言）\n2. null会被隐式转换成0，很不容易发现错误。\n3. 先有null后有undefined，出来undefined是为了填补之前的坑。\n\n具体区别：JavaScript的最初版本是这样区分的：null是一个表示"无"的对象（空对象指针），转为数值时为0；undefined是一个表示"无"的原始值，转为数值时为NaN。\n')])])]),a("p",[t._v("​\t\t\t\t面试题：==和===有什么不同？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("==  :  比较的是值\n\t\t\n\t\tstring == number || boolean || number ....都会隐式转换\n\t\t通过valueOf转换（valueOf() 方法通常由 JavaScript 在后台自动调用，并不显式地出现在代码中。）\n\n=== ： 除了比较值，还比较类型\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS微任务和宏任务")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. js是单线程的语言。\n2. js代码执行流程：同步执行完==》事件循环\n\t同步的任务都执行完了，才会执行事件循环的内容\n\t进入事件循环：请求、定时器、事件....\n3. 事件循环中包含：【微任务、宏任务】\n微任务：promise.then\n宏任务：setTimeout..\n\n要执行宏任务的前提是清空了所有的微任务\n\n流程：同步==》事件循环【微任务和宏任务】==》微任务==》宏任务=》微任务...\n\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS作用域考题")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 除了函数外，js是没有块级作用域。\n2. 作用域链：内部可以访问外部的变量，但是外部不能访问内部的变量。\n\t 注意：如果内部有，优先查找到内部，如果内部没有就查找外部的。\n3. 注意声明变量是用var还是没有写（window.）\n4. 注意：js有变量提升的机制【变量悬挂声明】\n5. 优先级：声明变量 > 声明普通函数 > 参数 > 变量提升\n")])])]),a("p",[t._v("面试的时候怎么看：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 本层作用域有没有此变量【注意变量提升】\n2. 注意：js除了函数外没有块级作用域\n3. 普通声明函数是不看写函数的时候顺序\n")])])]),a("h5",{attrs:{id:"考题一-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题一-2"}},[t._v("#")]),t._v(" 考题一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function c(){\n\tvar b = 1;\n\tfunction a(){\n\t\tconsole.log( b );\n\t\tvar b = 2;\n\t\tconsole.log( b );\n\t}\n\ta();\n\tconsole.log( b );\n}\nc();\n")])])]),a("h5",{attrs:{id:"考题二-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题二-2"}},[t._v("#")]),t._v(" 考题二：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var name = 'a';\n(function(){\n\tif( typeof name == 'undefined' ){\n\t\tvar name = 'b';\n\t\tconsole.log('111'+name);\n\t}else{\n\t\tconsole.log('222'+name);\n\t}\n})()\n")])])]),a("h5",{attrs:{id:"考题三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题三"}},[t._v("#")]),t._v(" 考题三：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function fun( a ){\n\tvar a = 10;\n\tfunction a(){}\n\tconsole.log( a );\n}\nfun( 100 );\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS对象考题")]),t._v(" "),a("p",[t._v("JS对象注意点：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 对象是通过new操作符构建出来的，所以对象之间不想等(除了引用外)；\n2. 对象注意：引用类型(共同一个地址)；\n3. 对象的key都是字符串类型；\n4. 对象如何找属性|方法；\n\t查找规则：先在对象本身找 ===> 构造函数中找 ===> 对象原型中找 ===> 构造函数原型中找 ===> 对象上一层原型查找\n")])])]),a("h5",{attrs:{id:"考题一-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题一-3"}},[t._v("#")]),t._v(" 考题一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" [1,2,3] === [1,2,3]   //false\n")])])]),a("h5",{attrs:{id:"考题二-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题二-3"}},[t._v("#")]),t._v(" 考题二：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var obj1 = {\n\ta:'hellow'\n}\nvar obj2 = obj1;\nobj2.a = 'world';\nconsole.log(obj1); \t//{a:world}\n(function(){\n\tconsole.log(a); \t//undefined\n\tvar a = 1;\n})();\n")])])]),a("h5",{attrs:{id:"考题三-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题三-2"}},[t._v("#")]),t._v(" 考题三：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var a = {}\nvar b = {\n\tkey:'a'\n}\nvar c = {\n\tkey:'c'\n}\n\na[b] = '123';\na[c] = '456';\n\nconsole.log( a[b] ); // 456\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS作用域+this指向+原型的考题")]),t._v(" "),a("h5",{attrs:{id:"考题一-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题一-4"}},[t._v("#")]),t._v(" 考题一：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Foo(){\n\tgetName = function(){console.log(1)} //注意是全局的window.\n\treturn this;\n}\n\nFoo.getName = function(){console.log(2)}\nFoo.prototype.getName = function(){console.log(3)}\nvar getName = function(){console.log(4)}\nfunction getName(){\n\tconsole.log(5)\n}\n\nFoo.getName();    //2\ngetName(); \t\t  //4\nFoo().getName();  //1\ngetName();\t\t  //1\nnew Foo().getName();//3\n")])])]),a("h5",{attrs:{id:"考题二-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题二-4"}},[t._v("#")]),t._v(" 考题二：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var o = {\n\ta:10,\n\tb:{\n\t\ta:2,\n\t\tfn:function(){\n\t\t\tconsole.log( this.a ); // 2\n\t\t\tconsole.log( this );   //代表b对象\n\t\t}\n\t}\n}\no.b.fn();\n")])])]),a("h5",{attrs:{id:"考题三-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题三-3"}},[t._v("#")]),t._v(" 考题三：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("window.name = 'ByteDance';\nfunction A(){\n\tthis.name = 123;\n}\nA.prototype.getA = function(){\n\tconsole.log( this );\n\treturn this.name + 1;\n}\nlet a = new A();\nlet funcA = a.getA;\nfuncA();  //this代表window\n")])])]),a("h5",{attrs:{id:"考题四"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考题四"}},[t._v("#")]),t._v(" 考题四：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var length = 10;\nfunction fn(){\n\treturn this.length + 1;\n}\nvar obj = {\n\tlength:5,\n\ttest1:function(){\n\t\treturn fn();\n\t}\n}\nobj.test2 = fn;\nconsole.log( obj.test1() ); \t\t\t\t\t\t\t//1\nconsole.log( fn()===obj.test2() ); \t\t\t\t//false\nconsole.log( obj.test1() == obj.test2() ); //false\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS判断变量是不是数组，你能写出哪些方法？")]),t._v(" "),a("h5",{attrs:{id:"方式一-isarray"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式一-isarray"}},[t._v("#")]),t._v(" 方式一：isArray")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr = [1,2,3];\nconsole.log( Array.isArray( arr ) );\n")])])]),a("h5",{attrs:{id:"方式二-instanceof-【可写-可不写】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式二-instanceof-【可写-可不写】"}},[t._v("#")]),t._v(" 方式二：instanceof  【可写,可不写】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr = [1,2,3];\nconsole.log( arr instanceof Array );\n")])])]),a("h5",{attrs:{id:"方式三-原型prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式三-原型prototype"}},[t._v("#")]),t._v(" 方式三：原型prototype")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr = [1,2,3];\nconsole.log( Object.prototype.toString.call(arr).indexOf('Array') > -1 );\n")])])]),a("h4",{attrs:{id:"方式四-isprototypeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式四-isprototypeof"}},[t._v("#")]),t._v(" 方式四：isPrototypeOf()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr = [1,2,3];\nconsole.log(  Array.prototype.isPrototypeOf(arr) )\n")])])]),a("h4",{attrs:{id:"方式五-constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式五-constructor"}},[t._v("#")]),t._v(" 方式五：constructor")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr = [1,2,3];\nconsole.log(  arr.constructor.toString().indexOf('Array') > -1 )\n")])])]),a("p",[t._v("​\t\t\t\t面试题：slice是干嘛的、splice是否会改变原数组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. slice是来截取的\n\t参数可以写slice(3)、slice(1,3)、slice(-3)\n\t返回的是一个新的数组\n2. splice 功能有：插入、删除、替换\n\t返回：删除的元素\n\t该方法会改变原数组\n")])])]),a("p",[t._v("​\t\t\t\t面试题：JS数组去重")]),t._v(" "),a("h5",{attrs:{id:"方式一-new-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式一-new-set"}},[t._v("#")]),t._v(" 方式一：new set")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr1 = [1,2,3,2,4,1];\nfunction unique(arr){\n\treturn [...new Set(arr)]\n}\nconsole.log(  unique(arr1) );\n")])])]),a("h5",{attrs:{id:"方式二-indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式二-indexof"}},[t._v("#")]),t._v(" 方式二：indexOf")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr2 = [1,2,3,2,4,1];\nfunction unique( arr ){\n\tvar brr = [];\n\tfor( var i=0;i<arr.length;i++){\n\t\tif(  brr.indexOf(arr[i]) == -1 ){\n\t\t\tbrr.push( arr[i] );\n\t\t}\n\t}\n\treturn brr;\n}\nconsole.log( unique(arr2) );\n")])])]),a("h5",{attrs:{id:"方式三-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式三-sort"}},[t._v("#")]),t._v(" 方式三：sort")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var arr3 = [1,2,3,2,4,1];\nfunction unique( arr ){\n\tarr = arr.sort();\n\tvar brr = [];\n\tfor(var i=0;i<arr.length;i++){\n\t\tif( arr[i] !== arr[i-1]){\n\t\t\tbrr.push( arr[i] );\n\t\t}\n\t}\n\treturn brr;\n}\nconsole.log( unique(arr3) );\n")])])]),a("p",[t._v("​\t\t\t\t面试题：找出多维数组最大值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function fnArr(arr){\n\tvar newArr = [];\n\tarr.forEach((item,index)=>{\n\t\tnewArr.push( Math.max(...item)  )\n\t})\n\treturn newArr;\n}\nconsole.log(fnArr([\n\t[4,5,1,3],\n\t[13,27,18,26],\n\t[32,35,37,39],\n\t[1000,1001,857,1]\n]));\n")])])]),a("p",[t._v("​\t\t\t\t面试题：给字符串新增方法实现功能")]),t._v(" "),a("p",[t._v("给字符串对象定义一个addPrefix函数，当传入一个字符串str时，它会返回新的带有指定前缀的字符串，例如：")]),t._v(" "),a("p",[t._v("console.log( 'world'.addPrefix('hello') )  控制台会输出helloworld")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("解答：\nString.prototype.addPrefix = function(str){\n\treturn str  + this;\n}\nconsole.log( 'world'.addPrefix('hello') )\n")])])]),a("p",[t._v("​\t\t\t\t面试题：找出字符串出现最多次数的字符以及次数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = 'aaabbbbbccddddddddddx';\nvar obj = {};\nfor(var i=0;i<str.length;i++){\n\tvar char = str.charAt(i);\n\tif( obj[char] ){\n\t\tobj[char]++;\n\t}else{\n\t\tobj[char] = 1;\n\t}\n}\nconsole.log( obj );\n//统计出来最大值\nvar max = 0;\nfor( var key in obj ){\n\tif( max < obj[key] ){\n\t\tmax = obj[key];\n\t}\n}\n//拿最大值去对比\nfor( var key in obj ){\n\tif( obj[key] == max ){\n\t\tconsole.log('最多的字符是'+key);\n\t\tconsole.log('出现的次数是'+max);\n\t}\n}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：new操作符具体做了什么")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 创建了一个空的对象\n2. 将空对象的原型，指向于构造函数的原型\n3. 将空对象作为构造函数的上下文（改变this指向）\n4. 对构造函数有返回值的处理判断\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Fun( age,name ){\n\tthis.age = age;\n\tthis.name = name;\n}\nfunction create( fn , ...args ){\n\t//1. 创建了一个空的对象\n\tvar obj = {}; //var obj = Object.create({})\n\t//2. 将空对象的原型，指向于构造函数的原型\n\tObject.setPrototypeOf(obj,fn.prototype);\n\t//3. 将空对象作为构造函数的上下文（改变this指向）\n\tvar result = fn.apply(obj,args);\n\t//4. 对构造函数有返回值的处理判断\n\treturn result instanceof Object ? result : obj;\n}\nconsole.log( create(Fun,18,'张三')   )\n")])])]),a("p",[t._v("​\t\t\t\t面试题：闭包")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 闭包是什么\n\t闭包是一个函数加上到创建函数的作用域的连接，闭包“关闭”了函数的自由变量。\n2. 闭包可以解决什么问题【闭包的优点】\n\t2.1 内部函数可以访问到外部函数的局部变量\n\t2.2 闭包可以解决的问题\n\t\t\tvar lis = document.getElementsByTagName('li');\n      for(var i=0;i<lis.length;i++){\n        (function(i){\n          lis[i].onclick = function(){\n            alert(i);\n          }\n        })(i)\n      }\n3. 闭包的缺点\n\t3.1 变量会驻留在内存中，造成内存损耗问题。\n\t\t\t\t解决：把闭包的函数设置为null\n  3.2 内存泄漏【ie】 ==> 可说可不说，如果说一定要提到ie\n")])])]),a("p",[t._v("​\t\t\t\t面试题：原型链")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 原型可以解决什么问题\n\t对象共享属性和共享方法\n2. 谁有原型\n函数拥有：prototype\n对象拥有：__proto__\n3. 对象查找属性或者方法的顺序\n\t先在对象本身查找 --\x3e 构造函数中查找 --\x3e 对象的原型 --\x3e 构造函数的原型中 --\x3e 当前原型的原型中查找\n4. 原型链\n\t4.1 是什么？：就是把原型串联起来\n\t4.2 原型链的最顶端是null\n")])])]),a("p",[t._v("​\t\t\t\t面试题： JS继承有哪些方式")]),t._v(" "),a("h5",{attrs:{id:"方式一-es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式一-es6"}},[t._v("#")]),t._v(" 方式一：ES6")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Parent{\n\tconstructor(){\n\t\tthis.age = 18;\n\t}\n}\n\nclass Child extends Parent{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.name = '张三';\n\t}\n}\nlet o1 = new Child();\nconsole.log( o1,o1.name,o1.age );\n")])])]),a("h5",{attrs:{id:"方式二-原型链继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式二-原型链继承"}},[t._v("#")]),t._v(" 方式二：原型链继承")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Parent(){\n\tthis.age = 20;\n}\nfunction Child(){\n\tthis.name = '张三'\n}\nChild.prototype = new Parent();\nlet o2 = new Child();\nconsole.log( o2,o2.name,o2.age );\n")])])]),a("h5",{attrs:{id:"方式三-借用构造函数继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式三-借用构造函数继承"}},[t._v("#")]),t._v(" 方式三：借用构造函数继承")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Parent(){\n\tthis.age = 22;\n}\nfunction Child(){\n\tthis.name = '张三'\n\tParent.call(this);\n}\nlet o3 = new Child();\nconsole.log( o3,o3.name,o3.age );\n")])])]),a("h5",{attrs:{id:"方式四-组合式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式四-组合式继承"}},[t._v("#")]),t._v(" 方式四：组合式继承")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Parent(){\n\tthis.age = 100;\n}\nfunction Child(){\n\tParent.call(this);\n\tthis.name = '张三'\n}\nChild.prototype = new Parent();\nlet o4 = new Child();\nconsole.log( o4,o4.name,o4.age );\n")])])]),a("p",[t._v("​\t\t\t\t面试题：说一下call、apply、bind区别")]),t._v(" "),a("h5",{attrs:{id:"共同点-功能一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共同点-功能一致"}},[t._v("#")]),t._v(" 共同点：功能一致")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("可以改变this指向\n\n语法： 函数.call()、函数.apply()、函数.bind()\n")])])]),a("h5",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. call、apply可以立即执行。bind不会立即执行，因为bind返回的是一个函数需要加入()执行。\n2. 参数不同：apply第二个参数是数组。call和bind有多个参数需要挨个写。\n")])])]),a("h5",{attrs:{id:"场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 用apply的情况\nvar arr1 = [1,2,4,5,7,3,321];\nconsole.log( Math.max.apply(null,arr1) )\n\n2. 用bind的情况\nvar btn = document.getElementById('btn');\nvar h1s = document.getElementById('h1s');\nbtn.onclick = function(){\n\tconsole.log( this.id );\n}.bind(h1s)\n")])])]),a("p",[t._v("​\t\t\t\t面试题：sort背后原理是什么？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("V8 引擎 sort 函数只给出了两种排序 InsertionSort 和 QuickSort，数量小于10的数组使用 InsertionSort，比10大的数组则使用 QuickSort。\n\n之前的版本是：插入排序和快排，现在是冒泡\n\n原理实现链接：https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js\n\n***710行代码开始***\n")])])]),a("p",[t._v("​\t\t\t\t面试题：深拷贝和浅拷贝")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("共同点：复制\n\n1. 浅拷贝：只复制引用，而未复制真正的值。\nvar arr1 = ['a','b','c','d'];\nvar arr2 = arr1;\n\nvar obj1 = {a:1,b:2}\nvar obj2 = Object.assign(obj1);\n\n2. 深拷贝：是复制真正的值 （不同引用）\nvar obj3 = {\n\ta:1,\n\tb:2\n}\nvar obj4 = JSON.parse(JSON.stringify( obj3 ));\n\n//递归的形式\nfunction copyObj( obj ){\n\tif(  Array.isArray(obj)  ){\n\t\tvar newObj = [];\n\t}else{\n\t\tvar newObj = {};\n\t}\n\tfor( var key in obj ){\n\t\tif( typeof obj[key] == 'object' ){\n\t\t\tnewObj[key] = copyObj(obj[key]);\n\t\t}else{\n\t\t\tnewObj[key] = obj[key];\n\t\t}\n\t}\n\treturn newObj;\n}\nconsole.log(  copyObj(obj5)  );\n")])])]),a("p",[t._v("​\t\t\t\t面试题：localStorage、sessionStorage、cookie的区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("公共点：在客户端存放数据\n区别：\n1. 数据存放有效期\n\t\tsessionStorage : 仅在当前浏览器窗口关闭之前有效。【关闭浏览器就没了】\n\t\tlocalStorage   : 始终有效，窗口或者浏览器关闭也一直保存，所以叫持久化存储。\n\t\tcookie\t\t\t\t : 只在设置的cookie过期时间之前有效，即使窗口或者浏览器关闭也有效。\n2. localStorage、sessionStorage不可以设置过期时间\n\t cookie 有过期时间，可以设置过期（把时间调整到之前的时间，就过期了）\n3. 存储大小的限制\n\tcookie存储量不能超过4k\n\tlocalStorage、sessionStorage不能超过5M\n\t\n\t****根据不同的浏览器存储的大小是不同的。\n")])])]),a("p",[t._v("​\t\t1.4 H5/C3面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：什么是语义化标签")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 易读性和维护性更好。\n2. seo成分会更好，蜘蛛抓取更好。\n3. IE8不兼容HTML5标签的。解决：可以通过html5shiv.js去处理。\n")])])]),a("p",[t._v("​\t\t\t\t面试题：::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 区别\n\t:是伪类、::伪元素  ===》是为了做区分\n\n2.是什么？作用\n\t元素before之前 、 元素after之后\n\t作用：清除浮动、样式布局上也有作用\n")])])]),a("p",[t._v("​\t\t\t\t面试题：如何关闭IOS键盘首字母自动大写")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<input type=\"text\" autocapitalize='off'>\n")])])]),a("p",[t._v("​\t\t\t\t面试题：怎么让Chrome支持小于12px 的文字？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Chrome默认字体大小是：16px\n**每个浏览器默认字体大小可能都不一样\n\n<style type="text/css">\ndiv{\n\tfont-size:10px;\n}\ndiv span{\n\tdisplay: inline-block;\n\t-webkit-transform:scale(1.6);\n}\n</style>\n')])])]),a("p",[t._v("​\t\t\t\t面试题：rem和em区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("相对于font-size\n\nem针对于父元素的font-size\nrem针对于根(html)元素的font-size\n")])])]),a("p",[t._v("​\t\t\t\t面试题：ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<style>\n\ta,button,input,textarea{\n\t\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n\t}\n</style>\n")])])]),a("p",[t._v("​\t\t\t\t面试题：webkit表单输入框placeholder的颜色值能改变吗？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<style type="text/css">\n\tinput::-webkit-input-placeholder{\n\t\tcolor:red;\n\t}\n</style>\n')])])]),a("p",[t._v("​\t\t\t\t面试题：禁止ios长按时触发系统的菜单，禁止ios&android长按时下载图片")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("禁止ios 长按时触发系统的菜单，禁止ios&android长按时下载图片\nhtml,body{\n\ttouch-callout: none;\n\t-webkit-touch-callout: none;\n\t\n\tuser-select:none;\n\t-webkit-user-select:none;\n}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：禁止ios和android用户选中文字")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("html,body{\n\tuser-select:none;\n\t-webkit-user-select:none;\n}\n")])])]),a("p",[t._v("​\t\t\t\t面试题：自适应")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("淘宝无限适配【移动端】：淘宝无限适配 + 布局单位使用rem\n")])])]),a("p",[t._v("​\t\t\t\t面试题：响应式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1. 是什么？\n\t一个URL可以响应多端\n2. 语法结构\n\t@media only screen and (max-width: 1000px){\n\t\tul li:last-child{\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\tonly : 可以排除不支持媒体查询的浏览器\n\tscreen ： 设备类型\n\tmax-width | max-height\n\tmin-width | min-height \n3. 响应式图片【性能优化】\n\t<picture>\n\t\t<source srcset="1.jpg" media=\'(min-width:1000px)\'>\n\t\t<source srcset="2.jpg" media=\'(min-width:700px)\'>\n\t\t<img srcset="3.jpg">\n\t</picture>\n')])])]),a("p",[t._v("布局方案")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("一、什么情况下采用响应式布局\n\t\n\t数据不是特别多，用户量不是特别大，纯展示类的项目适合响应式布局\n\t\n\t例如：公司的官网、专题页面\n\t\n\t特别追求性能的项目，不太适合响应式，因为如果添加了很多的响应式就会造成加载速度变慢。\n\n二、pc + 移动端应该做什么样的布局方案\n\t注意：访问量还可以或者比较大，类似于淘宝网。\n\t\n\tpc是一套，会加入一点点响应式。\n\t移动端是一套，会使用自适应的布局方式。\n\n三、pc的设计图\n\n\tui：1980\n\t笔记本电脑：1280\n\tui图的宽度和电脑的宽度不对应该怎么办？\n\t\t1. 把ui图进行等比缩放，缩放成和电脑一样的尺寸\n\t\t2. 换1980的电脑\n\t\t\n四、移动端的设计图\n\n\t宽度：750\n\t因为750设计图/2就是375，正好是iphone6的尺寸，我们要把iphone6的尺寸做为基准点。\n")])])]),a("p",[t._v("第二章 面试题进阶篇")]),t._v(" "),a("p",[t._v("​\t\t2.1 ES6面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：var、let、const区别")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：作用域考题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：将下列对象进行合并")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：箭头函数和普通函数有什么区别？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Promise有几种状态")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：find和filter的区别")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：some和every的区别")]),t._v(" "),a("p",[t._v("​\t\t2.2 webpack面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：webpack插件")]),t._v(" "),a("p",[t._v("​\t\t2.3 Git面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：git常用命令")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：解决冲突")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：GitFlow")]),t._v(" "),a("p",[t._v("第三章 面试题框架篇")]),t._v(" "),a("p",[t._v("​\t\t3.1 Vue面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vue2.x 生命周期有哪些？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：第一次进入组件或者页面，会执行哪些生命周期？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：谈谈你对keep-alive的了解")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：v-if和v-show区别")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：v-if和v-for优先级")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：ref是什么？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：nextTick是什么？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：路由导航守卫有哪些？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vue中如何做样式穿透")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：scoped原理")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vuex是单向数据流还是双向数据流？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：讲一下MVVM")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：双向绑定原理")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：什么是虚拟DOM")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：diff算法")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vue组件传值")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：介绍一下SPA以及SPA有什么缺点？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vue双向绑定和单向绑定")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：props和data优先级谁高？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：computed、methods、watch有什么区别？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：Vuex")]),t._v(" "),a("p",[t._v("​\t\t3.2 微信小程序面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：如何自定义头部？")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：如何自定义底部？")]),t._v(" "),a("p",[t._v("​\t\t3.3 uni-app面试题")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：生命周期")]),t._v(" "),a("p",[t._v("​\t\t\t\t面试题：条件编译")]),t._v(" "),a("p",[t._v("第四章 面试题性能优化篇")]),t._v(" "),a("p",[t._v("​\t\t4.1 加载优化")]),t._v(" "),a("p",[t._v("​\t\t4.2 图片优化")]),t._v(" "),a("p",[t._v("​\t\t4.3 渲染优化")]),t._v(" "),a("p",[t._v("​\t\t4.4 首屏优化")]),t._v(" "),a("p",[t._v("​\t\t4.5 vue优化")]),t._v(" "),a("p",[t._v("第五章 面试题兼容篇")]),t._v(" "),a("p",[t._v("​\t\t5.1 页面样式兼容")]),t._v(" "),a("p",[t._v("​\t\t5.2 框架兼容")]),t._v(" "),a("p",[t._v("第六章 面试题网络请求篇")]),t._v(" "),a("p",[t._v("​\t\t6.1 跨域面试题")]),t._v(" "),a("p",[t._v("​\t\t6.2 http和https")]),t._v(" "),a("p",[t._v("第七章 WEB安全篇")]),t._v(" "),a("p",[t._v("​\t\t7.1 XSS攻击")]),t._v(" "),a("p",[t._v("​\t\t7.2 SQL注入")]),t._v(" "),a("p",[t._v("​\t\t7.3 接口安全")]),t._v(" "),a("p",[t._v("第八章 其他类面试题")]),t._v(" "),a("p",[t._v("​\t\t8.1 token")]),t._v(" "),a("p",[t._v("​\t\t8.2 SEO")])])}),[],!1,null,null,null);a.default=s.exports}}]);