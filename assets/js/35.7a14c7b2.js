(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{440:function(t,v,_){"use strict";_.r(v);var e=_(2),r=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"变量作用域-闭包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量作用域-闭包"}},[t._v("#")]),t._v(" 变量作用域，闭包")]),t._v(" "),v("p",[t._v("😑 前提：1 函数可以访问其外部的变量")]),t._v(" "),v("p",[t._v("❓：函数被创建以后，外部变量发生了变化会怎样？")]),t._v(" "),v("h3",{attrs:{id:"代码块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[t._v("#")]),t._v(" 代码块")]),t._v(" "),v("ol",[v("li",[t._v("变量在代码块 "),v("code",[t._v("{}")]),t._v(" 中声明，也"),v("strong",[t._v("只在")]),t._v("该代码块中可见；否则报错"),v("code",[t._v("Error: xxx is not defined")])]),t._v(" "),v("li",[t._v("可以使用代码块来隔离一段代码。只执行自己的任务，使用仅属于自己的变量。")]),t._v(" "),v("li",[t._v("代码块包括"),v("code",[t._v("function if for while")]),t._v("等")])]),t._v(" "),v("p",[t._v("🈸 注意：")]),t._v(" "),v("ol",[v("li",[v("p",[v("code",[t._v("let")]),t._v("不可以在同一代码块对已存在的变量中重复声明。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("let")]),t._v(" 声明的变量在代码块外不可见。")])])]),t._v(" "),v("h3",{attrs:{id:"嵌套函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#嵌套函数"}},[t._v("#")]),t._v(" 嵌套函数")]),t._v(" "),v("p",[t._v("⚪️ 意思：一个函数是在另一个函数中创建的，该函数就被称为“嵌套函数”。")]),t._v(" "),v("ol",[v("li",[t._v("嵌套函数可以访问外部变量。【其实还是在另一个函数里面】")]),t._v(" "),v("li",[t._v("嵌套函数可以作为一个新对象的属性或作为结果返回。在函数中被"),v("code",[t._v("return")]),t._v("出去")])])])}),[],!1,null,null,null);v.default=r.exports}}]);