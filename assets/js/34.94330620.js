(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{438:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("参考链接：👊"),t("a",{attrs:{href:"https://juejin.cn/post/6844903487155732494#heading-1",target:"_blank",rel:"noopener noreferrer"}},[s._v("JS正则表达式完整教程（略长）"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_1-基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础"}},[s._v("#")]),s._v(" 1. 基础")]),s._v(" "),t("p",[t("strong",[s._v("正则表达式是匹配模式，要么匹配字符，要么匹配位置。")])]),s._v(" "),t("p",[s._v("**正则表达式之所以强大，是因为其能实现模糊匹配。**精确匹配是没什么意义的。")]),s._v(" "),t("h3",{attrs:{id:"_1-1-字符匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-字符匹配"}},[s._v("#")]),s._v(" 1.1 字符匹配")]),s._v(" "),t("p",[s._v("👂 1. "),t("strong",[s._v("横向模糊匹配")]),s._v("：指的是长度并不固定。"),t("strong",[s._v("{m,n}连续最少出现m次，最多n次")]),t("br"),s._v("\n比如说："),t("code",[s._v("/ab{2,6}c/")]),s._v("："),t("code",[s._v("字符a 2~5个字符b 字符c")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("ab{2,5}c")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" strings "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ 'abbc', 'abbbc', 'abbbbc', 'abbbbbc' ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g：全局匹配。即在目标字符串中按顺序找到满足匹配模式的所有子串。即global")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("👂 2. "),t("strong",[s._v("纵向模糊匹配")]),s._v("：具体到某一位字符时，可以有多个选择，多种可能。"),t("strong",[s._v("使用字符组 "),t("code",[s._v("[abc]")])]),s._v("：表示该字符可以是"),t("code",[s._v("a,b,c")]),s._v("中任何一个。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("regex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("a[123]bc")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstrings "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a0bc a1bc a2bc a3bc a4bc"')]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ 'a1bc', 'a2bc', 'a3bc' ]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("👂 3. "),t("strong",[s._v("字符组")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果字符很多，可以使用"),t("strong",[s._v("范围表示法")]),s._v("。"),t("u",[s._v("使用"),t("code",[s._v("-")]),s._v("来省略与简写。")])]),s._v(" "),t("p",[s._v("当然如果"),t("code",[s._v("-")]),s._v("变为匹配内容。比如说匹配 "),t("code",[s._v('“a","-","z"')]),s._v(" 。则为"),t("code",[s._v("[-az] [az-] [a\\-z]")]),s._v("。要么开头，要么结尾，要么转义。")])]),s._v(" "),t("li",[t("p",[s._v("排除字符法：可以是任何东西，不可以是"),t("code",[s._v('"a","b","c"')]),s._v(" 。使用排除字符组【反义字符组】。例如 "),t("code",[s._v("[^abc]")]),s._v(" "),t("code",[s._v("^")]),s._v(" 表示求反")])])]),s._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[s._v("1. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\d")]),s._v(" : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0-9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 表示一位数字\n2. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\D")]),s._v(" : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^0-9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 表示除了数字之外的任意字符\n3. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\w")]),s._v(" : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0-9a-zA-Z_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 表示数字，大小字母和下划线\n4. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\W")]),s._v(" : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^0-9a-zA-Z_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 非单词字符\n5. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\s")]),s._v(" : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\t")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\v")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\n")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\r")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 表示空白符，包括空格，制表符，换行符，回车符，换页符\n6. "),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\S")]),s._v(" : 非空白符\n7.  . : "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^"),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\n")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\r")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\u")]),s._v("2028"),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\u")]),s._v("2029"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 通配符，表示几乎任意字符。换行符，回车符，行分隔符，段分隔符除外。\n8. 匹配任何字符 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\d")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\w")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\W")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\s")]),t("span",{pre:!0,attrs:{class:"token function selector"}},[s._v("\\S")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("👂 4. "),t("strong",[s._v("量词")])]),s._v(" "),t("div",{staticClass:"language-tsx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tsx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" m\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" m\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("其他\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("贪婪匹配：尽可能多的匹配。")])]),s._v(" "),t("li",[t("p",[s._v("惰性匹配：和贪婪匹配相反。当满足最少要求时，就不再往下匹配。所以在下面例子中：每个子串有可能满足多次。")]),s._v(" "),t("p",[t("strong",[s._v("通过在量词后面加上?就可实现惰性匹配")]),s._v(" "),t("code",[s._v("{m,n}? {m,}? ?? +? *?")])])])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 贪婪匹配")]),s._v("\nregex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\d{2,5}")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstrings "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 12 123 1234 12345 123456"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ '12', '123', '1234', '12345', '12345' ]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 惰性匹配")]),s._v("\nregex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\d{2,5}?")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("strings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   '12', '12', '12',")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   '34', '12', '34',")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   '12', '34', '56'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("👂 "),t("strong",[s._v("多选分支")]),s._v("： 用"),t("code",[s._v("|")]),s._v("【管道符】分隔 类似于"),t("code",[s._v("or")]),s._v("的意思。表示任选其中之一。分支结构也是惰性的，即当排在|更前面的匹配上了，后面的就不再尝试。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("regex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("good|goodbye")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"goodbye"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ 'good' ]")]),s._v("\n\nregex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("goodbye|good")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [ 'goodbye' ]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"小结案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结案例"}},[s._v("#")]),s._v(" 小结案例：")]),s._v(" "),t("p",[s._v("🌻 1. "),t("strong",[s._v("匹配16进制颜色值")])]),s._v(" "),t("p",[s._v("要求匹配："),t("code",[s._v("#ffbbad #Fc01DF #FFF #ffE")])]),s._v(" "),t("div",{staticClass:"language-tsx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tsx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 16进制有 0-9 a-f A-F 其中数字与字符都可以出现3或6次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 任选一个 [0-9a-fA-F] 然后出现次数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("#[0-9a-fA-F]{6}|[0-9a-fA-F]{3}")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前面加个#号。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("🌻 2. "),t("strong",[s._v("匹配24小时制")])]),s._v(" "),t("p",[s._v("要求匹配：  "),t("code",[s._v("23.59 02.07")])]),s._v(" "),t("div",{staticClass:"language-tsx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tsx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 小数点前：00-23  小数点后：00-59")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当第一位为0,1时，第二位可以为0-9；但是为2时只能为0-3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[01][0-9]|[2][0-3]")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三位为0-5 第四位为0-9")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[0-5][0-9]")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("([01][0-9]|[2][0-3]):[0-5][0-9]")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_1-2-位置匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-位置匹配"}},[s._v("#")]),s._v(" 1.2 位置匹配")]),s._v(" "),t("h2",{attrs:{id:"_2-括号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-括号"}},[s._v("#")]),s._v(" 2. 括号")]),s._v(" "),t("h2",{attrs:{id:"_3-匹配原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-匹配原理"}},[s._v("#")]),s._v(" 3. 匹配原理")]),s._v(" "),t("h2",{attrs:{id:"_4-拆分正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-拆分正则表达式"}},[s._v("#")]),s._v(" 4. 拆分正则表达式")]),s._v(" "),t("h2",{attrs:{id:"_5-构建正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-构建正则表达式"}},[s._v("#")]),s._v(" 5. 构建正则表达式")]),s._v(" "),t("h2",{attrs:{id:"_6-注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-注意"}},[s._v("#")]),s._v(" 6. 注意")])])}),[],!1,null,null,null);t.default=e.exports}}]);